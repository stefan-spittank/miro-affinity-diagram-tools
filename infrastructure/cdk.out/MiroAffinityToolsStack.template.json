{
  "Resources": {
    "MiroAffinityToolsBucket2BE24FE8": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "miro-affinity-tools-",
              {
                "Ref": "AWS::AccountId"
              },
              "-",
              {
                "Ref": "AWS::Region"
              }
            ]
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "MiroAffinityToolsStack/MiroAffinityToolsBucket/Resource"
      }
    },
    "MiroAffinityToolsBucketPolicy86B5F73B": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "MiroAffinityToolsBucket2BE24FE8"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "MiroAffinityToolsDistributionOrigin1S3OriginC421B15F",
                    "S3CanonicalUserId"
                  ]
                }
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "MiroAffinityToolsBucket2BE24FE8",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MiroAffinityToolsStack/MiroAffinityToolsBucket/Policy/Resource"
      }
    },
    "CloudFrontSecurityHeadersFunction4CE8363E": {
      "Type": "AWS::CloudFront::Function",
      "Properties": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::Region"
              },
              "MiroAffintSecurityHeadersFunction02938E68"
            ]
          ]
        },
        "AutoPublish": true,
        "FunctionCode": "function handler(event) {\n  var response = event.response;\n  var headers = response.headers;\n\n  // Set HTTP security headers\n  // Since JavaScript doesn't allow for hyphens in variable names, we use the dict[\"key\"] notation\n  headers[\"strict-transport-security\"] = {\n    value: \"max-age=31536000; includeSubdomains; preload\",\n  };\n  headers[\"content-security-policy\"] = {\n    value:\n      \"default-src 'self'; img-src 'self'; script-src 'self' https://miro.com/*; style-src 'self'; object-src 'none'; frame-ancestors 'self' miro.com *.miro.com ;\",\n  };\n  headers[\"x-content-type-options\"] = { value: \"nosniff\" };\n  headers[\"x-frame-options\"] = { value: \"deny\" };\n  headers[\"x-xss-protection\"] = { value: \"1; mode=block\" };\n  headers[\"referrer-policy\"] = { value: \"same-origin\" };\n\n  // Return the response to viewers\n  return response;\n}\n",
        "FunctionConfig": {
          "Comment": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "AWS::Region"
                },
                "MiroAffintSecurityHeadersFunction02938E68"
              ]
            ]
          },
          "Runtime": "cloudfront-js-1.0"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MiroAffinityToolsStack/CloudFrontSecurityHeadersFunction/Resource"
      }
    },
    "MiroAffinityToolsDistributionOrigin1S3OriginC421B15F": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Identity for MiroAffinityToolsStackMiroAffinityToolsDistributionOrigin1D8F8109F"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MiroAffinityToolsStack/MiroAffinityToolsDistribution/Origin1/S3Origin/Resource"
      }
    },
    "MiroAffinityToolsDistribution2A8758CB": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "DefaultCacheBehavior": {
            "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
            "Compress": true,
            "FunctionAssociations": [
              {
                "EventType": "viewer-response",
                "FunctionARN": {
                  "Fn::GetAtt": [
                    "CloudFrontSecurityHeadersFunction4CE8363E",
                    "FunctionARN"
                  ]
                }
              }
            ],
            "TargetOriginId": "MiroAffinityToolsStackMiroAffinityToolsDistributionOrigin1D8F8109F",
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "MiroAffinityToolsBucket2BE24FE8",
                  "RegionalDomainName"
                ]
              },
              "Id": "MiroAffinityToolsStackMiroAffinityToolsDistributionOrigin1D8F8109F",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "MiroAffinityToolsDistributionOrigin1S3OriginC421B15F"
                      }
                    ]
                  ]
                }
              }
            }
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "MiroAffinityToolsStack/MiroAffinityToolsDistribution/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/3WPzQrCMBCEn8V7uv4UvWul4EmpDyDtJpVtawLZRJHQd7dNRb142pnZ2Q92Bcs1LGblgxOUbdJRBeHsSmzFEF0CpxB2HlvlRFbrt5rGyXSEz288+V5gZ7ysrdEOQu41OjJ6bH30nthZqnw0R0tX0ltExXyQSjtykZmNlHyk/Gv8Yvp+TArFxltU8d5oSXEltJEKGp7flxtIh18bJkqsH0A3BcU0XyOs3skHAQAA"
      },
      "Metadata": {
        "aws:cdk:path": "MiroAffinityToolsStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}